#!/usr/bin/env ruby

require 'edifact_converter'

$COMMAND_NAME = 'edifact_converter'
options = EdifactConverter::CommandLineParser.parse

EdifactConverter::Configuration.load
EdifactConverter::Configuration.hide_position = true

if options[:source] == :xml
  xmltext = EdifactConverter.read_file(options[:input])
  result = EdifactConverter.convert_xml(xmltext, options[:xml11])
  if options[:xml11]
    puts result.xml11
  else
    puts result.edifact
  end
else
  editxt = EdifactConverter.read_file(options[:input])
  result = EdifactConverter.convert_edifact(editxt, options[:xml11])
  if options[:xml11]
    puts result.xml11
  else
    puts result.xml
  end
end
exit

EdifactConverter::Configuration.load

time = Time.now
EdifactConverter::Configuration.hide_position = true
#result = EdifactConverter.convert_edifact(EdifactConverter.read_file('test/files/XBIN_hello_World.edi'))
#result = EdifactConverter.convert_edifact(EdifactConverter.read_file('tmp.edi'))
#puts result.xml
#puts Time.now - time

xmltext = EdifactConverter.read_file("test/files/XBIN_hello_World.xml")
result = EdifactConverter.convert_xml(xmltext)
#puts result.xml11
#puts result.edifact

#File.open('tmp.edi', 'w') { |file| file.write(result.edifact) }

puts Time.now - time

#puts result.xml
#p result.messages
#p EdifactConverter::Configuration.xml2edis
#p EdifactConverter::Configuration.edi2xmls
#p EdifactConverter::Configuration.schemas